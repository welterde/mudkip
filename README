
================================================================================
 MUDKIP
================================================================================

A Go based MUD server, client and game collection of packages.

This is work in progress. Expect commits that will significantly change the
overal structure of the project.

Check out server/main.go and client/main.go for working network examples. Run
the server first, then the client to have it connect to the server. Both require
that you supply a config file in the commandline. Run them without any arguments
to see the help on getting things started. To connect the client to the server,
you will obviously have to give them both the same IP/port to work with.

The mudkip server can listen on a secure socket using TLS/SSL. This means we
have to specify a Key file and certificate file in the server config if secure
is set to true. For testing purposes, we can generate a self-signed key file
and certificate. Check out the following website for a rundown on how this
works: http://www.akadia.com/services/ssh_test_certificate.html

The mudkip client also supports SSL connections. No certificate/key files are
needed here. All we need to do to enable SSL connectivity, is set the 'secure'
value to true in the client config file.

================================================================================
 USAGE
================================================================================

To start with, make sure you have the latest Go build environment installed and
running. See http://golang.org/doc/install.html for a guide.

If you already have Go, make sure you have the latest release build:

 $ cd $GOROOT
 $ hg pull
 $ hg update release

To get this project up and running, follow the steps below. This package has a
dependency on my ini-file parser package. You can get it from its git repo at
http://github.com/jteeuwen/go-pkg-ini
 
 $ cd /path/to/codedir
 $ git clone http://github.com/jteeuwen/mudkip.git
 $ cd mudkip

Optionally, modify the main makefile to set the appropriate DATASTORE value.
This value indicates which database driver to compile into the server. We opt to
make this choice at compile time to reduce the server binary size. There is no
need to have the unused drivers in there. All the drivers compile to a package
named mudkip/store.a. This is also why we can build only one of them.

 $ make

================================================================================
 LICENSE
================================================================================

All code is subject to a 1-clause BSD license. See the LICENSE file for its
contents.

